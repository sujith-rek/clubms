// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Admin {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  name          String
  role          String
  RoomBookApproval RoomBookApproval[]
  Eventapproval Eventapproval[]
}

model Club {
  id          Int               @id @default(autoincrement())
  name        String
  email       String            @unique
  password    String
  description String
  events      Event[]
}

model Student {
  id       Int                  @id @default(autoincrement())
  name     String
  email    String               @unique
  password String
  rollNo   String
}

model Event {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  date          DateTime
  venue         String
  club          Club            @relation(fields: [clubId], references: [id])
  clubId        Int
  Eventapproval Eventapproval[]
}

model Eventapproval {
  id          Int               @id @default(autoincrement())
  eventId     Int
  adminId     Int
  ccId        Int
  adminStatus Status            @default(PENDING)
  ccStatus    Status            @default(PENDING)
  event       Event             @relation(fields: [eventId], references: [id])
  admin       Admin             @relation(fields: [adminId], references: [id])
  cc          CC                @relation(fields: [ccId], references: [id])
}

model RoomBookApproval {
  id          Int               @id @default(autoincrement())
  roomId      Int
  adminId     Int
  from        DateTime
  to          DateTime
  adminStatus Status            @default(PENDING)
  room        Room              @relation(fields: [roomId], references: [id])
  admin       Admin             @relation(fields: [adminId], references: [id])
}

model Room {
  id               Int          @id @default(autoincrement())
  roonNumber       Int
  capacity         Int
  roomBlock        String
  roomBookApproval RoomBookApproval[]
}

model CC {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  Eventapproval Eventapproval[]
}

enum Role {
  ADMIN
  STUDENT
  CLUB
}

enum Status {
  APPROVED
  PENDING
  REJECTED
}
