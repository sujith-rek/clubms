generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Admin {
  id               Int                @id @default(autoincrement())
  email            String             @unique
  password         String
  name             String
  role             String
  Eventapproval    Eventapproval[]
  RoomBookApproval RoomBookApproval[]
}

model Club {
  id          Int     @id @default(autoincrement())
  name        String
  email       String  @unique
  password    String
  description String
  events      Event[]
}

model Student {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  rollNo   String
}

model Event {
  id            Int            @id @default(autoincrement())
  name          String
  description   String
  date          DateTime
  venue         String
  clubId        Int
  club          Club           @relation(fields: [clubId], references: [id])
  Eventapproval Eventapproval?
}

model Eventapproval {
  id          Int    @id @default(autoincrement())
  eventId     Int    @unique
  adminId     Int    @default(1)
  adminStatus Status @default(PENDING)
  ccId        Int    @default(1)
  ccStatus    Status @default(PENDING)
  admin       Admin  @relation(fields: [adminId], references: [id])
  cc          CC     @relation(fields: [ccId], references: [id])
  event       Event  @relation(fields: [eventId], references: [id])
}

model RoomBookApproval {
  id          Int      @id @default(autoincrement())
  roomId      Int
  adminId     Int
  from        DateTime
  to          DateTime
  adminStatus Status   @default(PENDING)
  admin       Admin    @relation(fields: [adminId], references: [id])
  room        Room     @relation(fields: [roomId], references: [id])
}

model Room {
  id               Int                @id @default(autoincrement())
  capacity         Int
  roomNumber       Int
  roomBlock        Block
  roomBookApproval RoomBookApproval[]
}

model CC {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  Eventapproval Eventapproval[]
}

enum Role {
  ADMIN
  STUDENT
  CLUB
}

enum Status {
  APPROVED
  PENDING
  REJECTED
}

enum Block {
  A_BLOCK
  B_BLOCK
  C_BLOCK
  D_BLOCK
}
